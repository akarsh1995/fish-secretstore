name: Test Plugin Structure and Functionality

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
         - ubuntu-latest
         - macos-latest
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install Fish Shell
        uses: fish-actions/install-fish@v1

      - name: Install dependencies
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y gnupg jq 
          else
            brew install gnupg jq 
          fi
          gpg --version
          jq --version
          fish --version

      - name: Install Fisher and fish-secretstore
        run: |
          fish -c "curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher install $GITHUB_WORKSPACE"
          fish -c "secret version"

      - name: Test plugin structure
        run: fish test.fish

      - name: Test basic functionality
        run: |
          fish -c "
          set -gx SECRETSTORE_GPG_RECIPIENT test@example.com
          source functions/secret.fish
          source completions/secret.fish
          source conf.d/secret.fish

          # Test config
          secret config

          # Test help
          secret 2>&1 | grep -q 'Usage:'

          echo 'Basic tests passed!'
          "

      - name: Test functional encryption/decryption of variables
        run: fish tests/test_functionality.fish

  syntax-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: fish-actions/install-fish@v1
      - uses: fish-actions/syntax-check@v1

  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: fish-actions/install-fish@v1
      - name: Check formatting manually
        run: |
          echo "Checking all Fish files for proper formatting..."
          find_result=0
          for file in $(find . -name "*.fish" -type f); do
            if ! fish_indent -c "$file"; then
              echo "::error file=$file::$file is not properly formatted"
              find_result=1
            fi
          done

          if [ $find_result -eq 1 ]; then
            echo "::error::Some files are not properly formatted. Run 'fish_indent -w' on them."
            exit 1
          else
            echo "All files are properly formatted!"
          fi
      - uses: fish-actions/format-check@v1

  auto-format:
    runs-on: ubuntu-latest
    needs: [format-check]
    # Only run this job if format-check fails and this is a pull request
    if: ${{ always() && github.event_name == 'pull_request' && needs.format-check.result == 'failure' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          # Using the default GITHUB_TOKEN with write permissions
      - uses: fish-actions/install-fish@v1
      - name: Format Fish files
        run: |
          echo "Formatting Fish files in the repository"
          find . -name "*.fish" -type f -exec fish_indent -w {} \;
          echo "Checking if any files were modified:"
          git status --porcelain
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "style: auto-format Fish files"
          commit_user_name: "GitHub Actions"
          commit_user_email: "actions@github.com"
          commit_author: "GitHub Actions <actions@github.com>"
          token: ${{ secrets.GITHUB_TOKEN }}